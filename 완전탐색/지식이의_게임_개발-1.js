// 입출력예시

// 입력
const 가로 = 4
const 세로 = 5
const 캐릭터 = [0,0]
let 장애물 = [[0,1],[1,1],[2,3],[1,3]]
// make_map(가로, 세로, 캐릭터위치, 장애물)

// 출력
// [2, 2, 2, 2, 2, 2]
// [2, 1, 2, 0, 0, 2]
// [2, 0, 2, 0, 2, 2]
// [2, 0, 0, 0, 2, 2]
// [2, 0, 0, 0, 0, 2]
// [2, 0, 0, 0, 0, 2]
// [2, 2, 2, 2, 2, 2]

//1.2중 반복문을 통해 벽을 포함한 2차원배열 map 가로 + 2, 세로 + 2 의 원소를 2 로 전부 만든다. 
//2.2중 반복문을통해 map2(캐릭터위치,장애물,지형)을 반영한 2차원 배열을 하나 더 만든다.
//3.반복문을 통해 변경해준다. 이때 방법은 배열,원소 각각의 길이를 -1 한 만큼만 반복.

function make_map(가로, 세로, 캐릭터, 장애물) {
  const map =[];
  
  for (let i = 0; i < 세로 + 2; i++) {
    let a = [];
    for (let j = 0; j < 가로 + 2; j++) {
      a.push(2);
    }
    map.push(a);
  }

  for (let i = 1; i < map.length - 1; i++) {
    for (let j = 1; j < map[i].length - 1; j++) {
      map[i][j] = 0;
    }
  }
  map[캐릭터[0] + 1][캐릭터[1] + 1] = 1;

  for (let i of 장애물) {
    if(map[i[0] + 1][i[1] + 1] == 1) {
      map[i[0] + 1][i[1] + 1] = 1
    } else {
      map[i[0] + 1][i[1] + 1] = 2
    }
  }
  console.log(map)
}

console.log(make_map(가로, 세로, 캐릭터, 장애물));
